AWSTemplateFormatVersion: 2010-09-09

## =================== DESCRIPTION =================== ##
Description: >-
  AWS CloudFormation sample template
  - Create a Route 53 record set group to route DNS traffic for root domain and subdomain to CloudFront domain

## ===================== METADATA ===================== ##
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: CloudFront parameters
        Parameters:
          - paramCloudFrontDistributionDomainNameForSubdomain
          - paramCloudFrontDistributionDomainNameForRootDomain
      - Label:
          default: DNS parameters
        Parameters:
          - paramRootDomain
          - paramSubdomain
          - paramHostedZoneId
      - Label:
          default: AWS tag parameters
        Parameters:
          - paramUniqueTagName

## ==================== PARAMETERS ==================== ##
Parameters:
  paramCloudFrontDistributionDomainNameForSubdomain:
    Description: Specify CloudFront distribution domain name for subdomain (such as abcdefg1234567.cloudfront.net)
    Type: String
  paramCloudFrontDistributionDomainNameForRootDomain:
    Description: Specify CloudFront distribution domain name for root domain (such as abcdefg1234567.cloudfront.net)
    Type: String
  paramRootDomain:
    Description: Specify a root domain for your website (such as example.com)
    Type: String
  paramSubdomain:
    Description: OPTIONAL. Specify a subdomain (such as 'www' or 'apex' for www.example.com or apex.example.com). You can leave it empty to skip.
    Type: String
    Default: www  
  paramHostedZoneId:
    Description: Specify a public hosted zone ID for root domain
    Type: String
  paramUniqueTagName:
    Description: Specify a unique name for tag
    Type: String
    Default: static-website-hosting-to-s3
    AllowedPattern: "[\\x20-\\x7E]*"
    ConstraintDescription: Must contain only ASCII characters

## ==================== MAPPINGS ==================== ##
# Mappings:

## ==================== CONDITIONS ==================== ##
# Conditions:

## ===================== RESOURCES ===================== ##
Resources:
  # create a Route 53 record set group to route DNS traffic to CloudFront domain for both - domain and subdomain
  myRoute53RecordSetGroup:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      Comment: Route53 record for CloudFront distributions for root domain and subdomain
      # HostedZoneName: !Sub '${paramRootDomain}.'  # keep the dot
      HostedZoneId: !Ref paramHostedZoneId
      RecordSets:
        # for CloudFront distributions subdomain (such as www.example.com)
        - Name: !Sub '${paramSubdomain}.${paramRootDomain}.'  # keep the dot
          Type: A # 'A' routes traffic to an IPv4 address and some AWS resources. E.g. if the name of the hosted zone is 'example.com' and you want to use www.example.com to route traffic to your distribution, enter 'www.'
          AliasTarget:
              DNSName: !Ref paramCloudFrontDistributionDomainNameForSubdomain
              HostedZoneId: Z2FDTNDATAQYW2 # DONT change! It is a magical alphanumeric ID provided by AWS team for CloudFront distribution 
        # for CloudFront distributions root domain (such as example.com)
        - Name: !Sub '${paramRootDomain}.'  # keep the dot
          Type: A # 'A' routes traffic to an IPv4 address and some AWS resources. E.g. if the name of the hosted zone is 'example.com' and you want to use www.example.com to route traffic to your distribution, enter 'www.'
          AliasTarget:
              DNSName: !Ref paramCloudFrontDistributionDomainNameForRootDomain
              HostedZoneId: Z2FDTNDATAQYW2 # DONT change! It is a magical alphanumeric ID provided by AWS team for CloudFront distribution 

## ======================= OUTPUT ====================== ##
Outputs: 
  outputWebsiteURLForSubdomain:
    Description: Website url for subdomain
    Value: !Sub 'https://${paramSubdomain}.${paramRootDomain}/'
  outputWebsiteURLForRootDomain:
    Description: Website url for root domain
    Value: !Sub 'https://${paramRootDomain}/'